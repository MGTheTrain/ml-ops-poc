name: Manage/deploy or destroy an k8s cluster to a cloud provider

on:
  workflow_dispatch:
    inputs:
      INFRASTRUCTURE_OPERATION:
        type: choice
        options: [ 'deploy-k8s-service', 'destroy-k8s-service' ]
        default: deploy-k8s-service
        description: 'Infrastructure operation'
      ENVIRONMENT:
        type: choice
        options: [ 'sbx' ]
        default: sbx
        description: 'Environment on which to deploy. Dev, qas, staging, prod environments not considered'

jobs:

  deploy-k8s:
    environment: ${{ inputs.ENVIRONMENT }}
    env:
      ARM_SUBSCRIPTION_ID: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
      ARM_TENANT_ID: '${{ secrets.ARM_TENANT_ID }}'
      ARM_CLIENT_ID: '${{ secrets.ARM_CLIENT_ID }}'
      ARM_CLIENT_SECRET: '${{ secrets.ARM_CLIENT_SECRET }}'
    if: ${{ inputs.INFRASTRUCTURE_OPERATION == 'deploy-k8s-service' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3  
      
      - name: Terraform Init # requires a Storage Account backend deployed trough storage-account-backend-deploy workflow step
        run: |
          terraform init \
          -backend-config="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}" \
          -backend-config="storage_account_name=mopoctbsbxsa001" \
          -backend-config="resource_group_name=mopoctb-sbx-rg001" \
          -backend-config="container_name=mopoctbsbxsac001" \
          -backend-config="key=${{ inputs.ENVIRONMENT }}/cloud-infra/terraform.tfstate"
        working-directory: ./terraform/envs/${{ inputs.ENVIRONMENT }}/cloud-infra

      - name: Deploy Kubernetes service and related resources
        run: terraform apply --auto-approve
        continue-on-error: false
        working-directory: ./terraform/envs/${{ inputs.ENVIRONMENT }}/cloud-infra
  
  destroy-k8s:
    environment: ${{ inputs.ENVIRONMENT }}
    env:
      ARM_SUBSCRIPTION_ID: '${{ secrets.ARM_SUBSCRIPTION_ID }}'
      ARM_TENANT_ID: '${{ secrets.ARM_TENANT_ID }}'
      ARM_CLIENT_ID: '${{ secrets.ARM_CLIENT_ID }}'
      ARM_CLIENT_SECRET: '${{ secrets.ARM_CLIENT_SECRET }}'
    if: ${{ inputs.INFRASTRUCTURE_OPERATION == 'destroy-k8s-service' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3  

      - name: Terraform Init # requires a Storage Account backend deployed trough storage-account-backend-deploy workflow step
        run: |
          terraform init \
          -backend-config="subscription_id=${{ env.ARM_SUBSCRIPTION_ID }}" \
          -backend-config="storage_account_name=mopoctbsbxsa001" \
          -backend-config="resource_group_name=mopoctb-sbx-rg001" \
          -backend-config="container_name=mopoctbsbxsac001" \
          -backend-config="key=${{ inputs.ENVIRONMENT }}/cloud-infra/terraform.tfstate"
        working-directory: ./terraform/envs/${{ inputs.ENVIRONMENT }}/cloud-infra

      - name: Destroy Kubernetes service and related resources
        run: terraform destroy --auto-approve
        continue-on-error: false
        working-directory: ./terraform/envs/${{ inputs.ENVIRONMENT }}/cloud-infra